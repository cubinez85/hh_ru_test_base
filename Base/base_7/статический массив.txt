
что не является типом данных в Python: 1) последовательность байтов 2) отсутствие типа 3) статический массив 4) комплексное число 5) постоянное множество
 

ЧатБотЧатПриложение
Ответ: 3) статический массив

В Python нет встроенного типа данных, который бы определял концепцию статического массива (как, например, в C++ или Java). Вот почему остальные варианты являются разъемами типа:

1) Последовательность байтов (байтов): bytes - это встроенный тип данных, представляющий неизменяемую последовательность байтов.
2) Отсутствие типа (NoneType): None — это специальное значение, которое указывает на отсутствие значения. Его тип - NoneType.
4) Комплексное число (complex): complex — это встроенный тип данных, представляющий комплексные числа (с действительной и минимальной частью).
5) Неизменяемое множество (frozenset): frozenset — это встроенный тип данных, представляющий изменяемое множество.
Пояснение про статические массивы:

В Python можно использовать модуль arrayдля создания массивов, в которых хранятся однотипные данные, но эти массивы не являются «статическими» в строгом смысле этого слова (как, например, массивы в C/C++). Размер Python-массива может меняться (хотя и не так гибко, как у списков). Для работы с настоящими статическими массивами обычно используются библиотеки, такие как NumPy. Массивы NumPy реализованы на C и обеспечивают высокую производительность, но они не являются типом данных Python.