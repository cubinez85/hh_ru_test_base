Какое утверждение о статических переменных в Python не верно:
1) статические переменные нельзя изменить
2) доступ к статическим переменным можно осуществлять от класса и от его объекта
3) статическую переменную можно добавить к классу динамически
4) статические переменные принадлежат классу, а не его объектам
5) статические переменные не объявляются внутри метода __init__()

Давайте разберем каждое утверждение о статических функциях (или классе категорий) на Python и определим неверно:

статические переменные нельзя изменить - Неверно. Статические переменные можно изменять. Хотя они и принадлежат к классу, их значения можно менять, обращаясь к ним через класс или экземпляр класса.

Доступ к статическим переменным можно изучить по классу и по его объекту - Верно. Доступ к статической переменной можно получить как через имя класса ( ClassName.static_variable), так и через экземпляр класса ( instance.static_variable).

Статическую переменную можно добавить к классу воздействия - Верно. В Python можно добавлять атрибуты (включая статические переменные) в класс после его определения. Например:

питон

class MyClass:
    pass

MyClass.new_static_variable = "Some value"
статические переменные относятся к классу, а не к его объектам - Верно. Это ключевое свойство статических функций. В отличие от экземпляра экземпляра (который уникален для каждого объекта), статическая переменная является общей для всех классов экземпляров.

статические переменные не объявляются внутри метода__init__() - Верно. Метод __init__()используется для соединения экземпляров класса. Статические переменные обычно объявляются непосредственно в классе теле, вне каких-либо методов.

Таким образом, неверным является утверждение 1: статические переменные нельзя изменить. Их можно изменить.